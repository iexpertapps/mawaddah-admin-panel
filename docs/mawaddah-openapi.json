openapi: 3.0.3


info:
  title: ''
  version: 0.0.0
paths:
  /api/appeals/:
    get:
      operationId: appeals_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - appeals
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppealList'
          description: ''
    post:
      operationId: appeals_create
      tags:
      - appeals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appeal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Appeal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Appeal'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
          description: ''
  /api/appeals/{id}/:
    get:
      operationId: appeals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appeal.
        required: true
      tags:
      - appeals
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
          description: ''
    put:
      operationId: appeals_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appeal.
        required: true
      tags:
      - appeals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appeal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Appeal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Appeal'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
          description: ''
    patch:
      operationId: appeals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appeal.
        required: true
      tags:
      - appeals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppeal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppeal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppeal'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
          description: ''
  /api/appeals/my-appeals/:
    get:
      operationId: appeals_my_appeals_retrieve
      description: List appeals created by the current user.
      tags:
      - appeals
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
          description: ''
  /api/appeals/reviewable/:
    get:
      operationId: appeals_reviewable_retrieve
      description: List appeals visible to Shura for review (pending).
      tags:
      - appeals
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
          description: ''
  /api/donations/:
    get:
      operationId: donations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - donations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDonationList'
          description: ''
    post:
      operationId: donations_create
      tags:
      - donations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Donation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Donation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
          description: ''
  /api/donations/{id}/:
    get:
      operationId: donations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Donation.
        required: true
      tags:
      - donations
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/:
    get:
      operationId: users_list
      description: 'User API: list, retrieve, update (no create/delete). /me/ for
        current user.'
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: 'User API: list, retrieve, update (no create/delete). /me/ for
        current user.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: 'User API: list, retrieve, update (no create/delete). /me/ for
        current user.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: 'User API: list, retrieve, update (no create/delete). /me/ for
        current user.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      description: Return the current authenticated user's profile.
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Appeal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        amount_requested:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        is_monthly:
          type: boolean
        months_required:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        is_urgent:
          type: boolean
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        beneficiary:
          type: integer
          readOnly: true
        approved_by:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount_requested
      - approved_by
      - beneficiary
      - category
      - created_at
      - created_by
      - id
      - is_urgent
      - status
      - title
      - updated_at
    BlankEnum:
      enum:
      - ''
    CategoryEnum:
      enum:
      - house_rent
      - school_fee
      - medical
      - utility_bills
      - debt
      - business_support
      - death_support
      - other
      type: string
      description: |-
        * `house_rent` - House Rent
        * `school_fee` - School Fee
        * `medical` - Medical
        * `utility_bills` - Utility Bills
        * `debt` - Debt
        * `business_support` - Business Support
        * `death_support` - Death Support
        * `other` - Other
    Donation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        donor:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 8
        status:
          type: string
          readOnly: true
        note:
          type: string
          nullable: true
        appeal:
          type: integer
          nullable: true
          description: 'Optional: Donor may or may not target a specific appeal.'
        payment_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        transaction_id:
          type: string
          readOnly: true
        receipt_url:
          type: string
          format: uri
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - donor
      - id
      - receipt_url
      - status
      - transaction_id
      - updated_at
    NullEnum:
      enum:
      - null
    PaginatedAppealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Appeal'
    PaginatedDonationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Donation'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAppeal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        amount_requested:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        is_monthly:
          type: boolean
        months_required:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        is_urgent:
          type: boolean
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        beneficiary:
          type: integer
          readOnly: true
        approved_by:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          title: Phone Number
          maxLength: 15
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User Role
        is_verified_syed:
          type: boolean
          title: Verified Syed Status
          description: Only verified Sadaat can submit Mawaddah appeals
        country:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        city:
          type: string
          maxLength: 100
        wallet_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PaymentMethodEnum:
      enum:
      - stripe
      - jazzcash
      - easypaisa
      - bank_transfer
      - manual
      type: string
      description: |-
        * `stripe` - Stripe
        * `jazzcash` - JazzCash
        * `easypaisa` - EasyPaisa
        * `bank_transfer` - Bank Transfer
        * `manual` - Manual
    RoleEnum:
      enum:
      - user
      - donor
      - recipient
      - shura
      - admin
      type: string
      description: |-
        * `user` - User
        * `donor` - Donor
        * `recipient` - Recipient
        * `shura` - Shura Member
        * `admin` - Admin
    StatusEnum:
      enum:
      - pending
      - approved
      - rejected
      - fulfilled
      - expired
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
        * `fulfilled` - Fulfilled
        * `expired` - Expired
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          title: Phone Number
          maxLength: 15
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User Role
        is_verified_syed:
          type: boolean
          title: Verified Syed Status
          description: Only verified Sadaat can submit Mawaddah appeals
        country:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        city:
          type: string
          maxLength: 100
        wallet_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - updated_at
      - wallet_balance
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
